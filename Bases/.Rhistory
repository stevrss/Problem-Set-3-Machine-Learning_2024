use_git()
library(usethis)
install.packages("usethis")
edit_git_config()
use_git()
library(usethis)
install.packages("usethis")
sessionInfo()
library(installr)
updateR()
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 3 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto 3
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de interes
library(pacman)
p_load(
# Funciones basicas para manejo y analisis de datos
arrow,         # Lectura y escritura de datos en formatos eficientes como Apache Parquet y Feather
sfheaders,     # Manipulacion eficiente de objetos espaciales 'sf' en R
VIM,           # Manejo y visualizacion de valores faltantes en datasets
tidyverse,     # Coleccion de paquetes para manipulacion de datos (dplyr, ggplot2, tidyr, etc.)
janitor,       # Limpieza y organizacion de datos (e.g., nombres de columnas, tablas cruzadas)
here,          # Gestion de rutas relativas para proyectos en R
rio,           # Importacion y exportacion sencilla de archivos (CSV, Excel, SPSS, etc.)
stringi,       # Manipulacion avanzada de cadenas de texto
readr,         # Lectura rapida de archivos de texto y CSV
skimr,         # Resumenes estadadisticos rapidos y detallados de datasets
stargazer,
# Paquetes para manejo de datos espaciales
sf,            # Manejo y analisis de datos espaciales en formato simple (e.g., shapefiles, GeoJSON)
leaflet,       # Visualizacion interactiva de mapas en R
spatialsample, # Creacion de muestras espaciales para analisis y modelado
osmdata,       # Obtencion de datos geoespaciales de OpenStreetMap (OSM)
tmaptools,     # Herramientas de apoyo para crear mapas con 'tmap'
caret,         # Conjunto de herramientas para entrenamiento y evaluacion de modelos predictivos
# Paquetes de aprendizaje automatico (Machine Learning)
tidymodels,    # Framework para construir y evaluar modelos de machine learning en un entorno 'tidy'
xgboost,       # Algoritmo de gradient boosting optimizado para tareas de clasificacion y regresion
gbm,           # Modelado de boosting basado en arboles de decision (Gradient Boosting Machines)
SuperLearner,   # Meta-modelo para combinar mÃºltiples algoritmos de machine learning y mejorar la predicciÃ³n
#Redes neuronales
nnet,   # redes neuronales de una sola capa
Brulee, # Redes neuronales mas complejas
skimr,     # datos de resumen
visdat,    # visualizacion de datos faltantes
corrplot,  # graficos de correlacion
stargazer, # tablas/salida a TEX.
modeest,   #Moda
ggplot2,    #Graficos
plotly
)
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("Usuario", getwd()), # Julieth1
wd <- "C:\\Users\\Usuario\\OneDrive - Universidad de los andes\\Documentos\\GitHub\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("HP", getwd()), # Diego
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("hncar", getwd()),
wd <- "C:\\Users\\hncar\\Documents\\GitHub\\Problem-Set-2_Machine-Learning_2024",
ifelse(grepl("C:\\Users\\User", getwd()),  # Henry
wd <- "C:\\Users\\User\\OneDrive - Universidad de los Andes\\Big Data y Machine Learning\\Problem_set_1\\Problem_set_1",
ifelse(grepl("\\\\Users\\\\aleja\\\\", getwd()),
wd <- "Directorio",  # Jorge
ifelse(grepl("Steven Ramirez", getwd()),
wd <- "C:/Users/Steven Ramirez/Downloads/Problem-Set-2_Machine-Learning_2024/Problem-Set-2_Machine-Learning_2024",
"otro_directorio"))))))
#------------------------------------------------------------------------------#
#----------------------------- Pruebas - Diego  -------------------------------#
#------------------------------------------------------------------------------#
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024"
setwd(paste0(wd,"\\Bases"))
# 1. Cargue base de datos ------------------------------------------------------
Train <- readRDS("train.rds")
Test  <- readRDS("test.rds")
db_miss_train <- skim(Train)%>% dplyr::select(skim_variable, n_missing)
db_miss_test  <- skim(Test)%>% dplyr::select(skim_variable, n_missing)
# 1.1. Variables de interes ----------------------------------------------------
train <- Train %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
test <- Test %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
# 2. Arreglo de datos ----------------------------------------------------------
# Se guardan las descripciones en un vector source
descriptions_train <- train$description
des_train_scource <- VectorSource(descriptions_train)
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024"
setwd(paste0(wd,"\\Bases"))
# 1. Cargue base de datos ------------------------------------------------------
Train <- readRDS("train.rds")
Test  <- readRDS("test.rds")
db_miss_train <- skim(Train)%>% dplyr::select(skim_variable, n_missing)
db_miss_test  <- skim(Test)%>% dplyr::select(skim_variable, n_missing)
# 1.1. Variables de interes ----------------------------------------------------
train <- Train %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
test <- Test %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
# Se guardan las descripciones en un vector source
descriptions_train <- train$description
des_train_scource <- VectorSource(descriptions_train)
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de interes
library(pacman)
p_load(
# Funciones basicas para manejo y analisis de datos
arrow,         # Lectura y escritura de datos en formatos eficientes como Apache Parquet y Feather
sfheaders,     # Manipulacion eficiente de objetos espaciales 'sf' en R
VIM,           # Manejo y visualizacion de valores faltantes en datasets
tidyverse,     # Coleccion de paquetes para manipulacion de datos (dplyr, ggplot2, tidyr, etc.)
janitor,       # Limpieza y organizacion de datos (e.g., nombres de columnas, tablas cruzadas)
here,          # Gestion de rutas relativas para proyectos en R
rio,           # Importacion y exportacion sencilla de archivos (CSV, Excel, SPSS, etc.)
stringi,       # Manipulacion avanzada de cadenas de texto
readr,         # Lectura rapida de archivos de texto y CSV
skimr,         # Resumenes estadadisticos rapidos y detallados de datasets
stargazer,
# Paquetes para manejo de datos espaciales
sf,            # Manejo y analisis de datos espaciales en formato simple (e.g., shapefiles, GeoJSON)
leaflet,       # Visualizacion interactiva de mapas en R
spatialsample, # Creacion de muestras espaciales para analisis y modelado
osmdata,       # Obtencion de datos geoespaciales de OpenStreetMap (OSM)
tmaptools,     # Herramientas de apoyo para crear mapas con 'tmap'
caret,         # Conjunto de herramientas para entrenamiento y evaluacion de modelos predictivos
# Paquetes de aprendizaje automatico (Machine Learning)
tidymodels,    # Framework para construir y evaluar modelos de machine learning en un entorno 'tidy'
xgboost,       # Algoritmo de gradient boosting optimizado para tareas de clasificacion y regresion
gbm,           # Modelado de boosting basado en arboles de decision (Gradient Boosting Machines)
SuperLearner,   # Meta-modelo para combinar mÃºltiples algoritmos de machine learning y mejorar la predicciÃ³n
#Redes neuronales
nnet,   # redes neuronales de una sola capa
Brulee, # Redes neuronales mas complejas
skimr,     # datos de resumen
visdat,    # visualizacion de datos faltantes
corrplot,  # graficos de correlacion
stargazer, # tablas/salida a TEX.
modeest,   #Moda
ggplot2,    #Graficos
plotly
)
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024"
setwd(paste0(wd,"\\Bases"))
# 1. Cargue base de datos ------------------------------------------------------
Train <- readRDS("train.rds")
Test  <- readRDS("test.rds")
db_miss_train <- skim(Train)%>% dplyr::select(skim_variable, n_missing)
db_miss_test  <- skim(Test)%>% dplyr::select(skim_variable, n_missing)
# 1.1. Variables de interes ----------------------------------------------------
train <- Train %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
test <- Test %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
# Se guardan las descripciones en un vector source
descriptions_train <- train$description
des_train_scource <- VectorSource(descriptions_train)
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 3 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Prepara el entorno y argar los paquetes necesarios para el desarrollo del taller
# 2: Cambiar el directorio entre cada uno de los colaboradores del proyecto 3
#------------------------------------------------------------------------------#
# 1: Prepara el entorno y argar los paquetes necesarios para el desarrollo del taller
#------------------------------------------------------------------------------#
# Limpia toda la memoria del entorno de trabajo para evitar conflictos con variables previas.
rm(list = ls())
# Se cargan los paquetes necesarios usando 'pacman', que facilita la gestiÃ³n de paquetes.
library(pacman)
# 'p_load' instala (si no estÃ¡n ya instalados) y carga los paquetes necesarios.
p_load(
# ------------------------- Manejo y anÃ¡lisis de datos -------------------------
arrow,         # Lectura y escritura de datos en formatos optimizados (Parquet, Feather).
sfheaders,     # ManipulaciÃ³n eficiente de objetos espaciales tipo 'sf' (data frames con geometrÃ­as espaciales).
VIM,           # Manejo y visualizaciÃ³n de valores faltantes en datasets.
tidyverse,     # Conjunto de paquetes para manipulaciÃ³n de datos (e.g., dplyr, ggplot2, tidyr).
janitor,       # Limpieza de datos (normaliza nombres de columnas, crea tablas resumidas, etc.).
here,          # Facilita la gestiÃ³n de rutas relativas para proyectos reproducibles.
rio,           # Simplifica la importaciÃ³n/exportaciÃ³n de diversos formatos de datos (CSV, Excel, SPSS, etc.).
stringi,       # Ofrece herramientas avanzadas para manipulaciÃ³n de cadenas de texto.
readr,         # Lectura eficiente de archivos planos como CSV y TSV.
skimr,         # Proporciona resÃºmenes detallados y rÃ¡pidos de los datos (estadÃ­sticas descriptivas).
stargazer,     # Produce tablas de resultados en formato LaTeX, texto y HTML para informes reproducibles.
# ---------------------- Manejo de datos espaciales ----------------------
sf,            # Manejo y anÃ¡lisis de datos espaciales en formato 'sf' (e.g., shapefiles, GeoJSON).
leaflet,       # Crea mapas interactivos para visualizaciÃ³n de datos espaciales.
spatialsample, # Muestras espaciales para modelado y anÃ¡lisis.
osmdata,       # ObtenciÃ³n de datos geogrÃ¡ficos de OpenStreetMap (como edificios, carreteras).
tmaptools,     # Herramientas complementarias para crear mapas con el paquete 'tmap'.
caret,         # Framework para entrenamiento y validaciÃ³n de modelos predictivos.
# -------------------- Aprendizaje automÃ¡tico (Machine Learning) -------------------
tidymodels,    # Framework para construir modelos predictivos en un entorno "tidy".
xgboost,       # Algoritmo avanzado para clasificaciÃ³n y regresiÃ³n basado en gradient boosting.
gbm,           # MÃ¡quinas de boosting (gradient boosting) basadas en Ã¡rboles de decisiÃ³n.
SuperLearner,  # Combina mÃºltiples algoritmos de aprendizaje automÃ¡tico para mejorar la predicciÃ³n.
# --------------------------- Redes neuronales --------------------------------
nnet,          # Redes neuronales simples de una capa (Ãºtil para regresiÃ³n/clasificaciÃ³n bÃ¡sica).
Brulee,        # ImplementaciÃ³n moderna para redes neuronales mÃ¡s complejas.
# ---------------------- Herramientas de visualizaciÃ³n ----------------------
skimr,         # ResÃºmenes de datos detallados.
visdat,        # VisualizaciÃ³n de valores faltantes y estructura de datos.
corrplot,      # GrÃ¡ficos para representar matrices de correlaciÃ³n.
ggplot2,       # CreaciÃ³n de grÃ¡ficos personalizables y profesionales.
plotly,        # GrÃ¡ficos interactivos basados en 'ggplot2'.
# ------------------------- EstadÃ­stica y anÃ¡lisis bÃ¡sico ---------------------
modeest,       # CÃ¡lculo de la moda (estadÃ­stica descriptiva).
stargazer      # Tablas en formato LaTeX, HTML y texto para reportar resultados estadÃ­sticos.
)
#------------------------------------------------------------------------------#
# 2: Definir directorios
#------------------------------------------------------------------------------#
ifelse(grepl("Usuario", getwd()), # Julieth1
wd <- "C:\\Users\\Usuario\\OneDrive - Universidad de los andes\\Documentos\\GitHub\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("HP", getwd()), # Diego
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("hncar", getwd()),
wd <- "C:\\Users\\hncar\\Documents\\GitHub\\Problem-Set-2_Machine-Learning_2024",
ifelse(grepl("C:\\Users\\User", getwd()),  # Henry
wd <- "C:\\Users\\User\\OneDrive - Universidad de los Andes\\Big Data y Machine Learning\\Problem_set_1\\Problem_set_1",
ifelse(grepl("\\\\Users\\\\aleja\\\\", getwd()),
wd <- "Directorio",  # Jorge
ifelse(grepl("Steven Ramirez", getwd()),
wd <- "C:/Users/Steven Ramirez/Downloads/Problem-Set-2_Machine-Learning_2024/Problem-Set-2_Machine-Learning_2024",
"otro_directorio"))))))
#------------------------------------------------------------------------------#
#----------------------------- Pruebas - Diego  -------------------------------#
#------------------------------------------------------------------------------#
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024"
setwd(paste0(wd,"\\Bases"))
# 1. Cargue base de datos ------------------------------------------------------
Train <- readRDS("train.rds")
Test  <- readRDS("test.rds")
db_miss_train <- skim(Train)%>% dplyr::select(skim_variable, n_missing)
db_miss_test  <- skim(Test)%>% dplyr::select(skim_variable, n_missing)
# 1.1. Variables de interes ----------------------------------------------------
train <- Train %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
test <- Test %>%
select(-surface_total, -surface_covered, -rooms, -bedrooms, -bathrooms)
# Se guardan las descripciones en un vector source
descriptions_train <- train$description
des_train_scource <- VectorSource(descriptions_train)
