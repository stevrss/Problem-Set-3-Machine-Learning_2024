#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PPROGRAMAS -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto
# 2: Correr cada uno de los scripts utilizados en la resoluci?n del problem set 1.
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de inter?s
library(pacman)
p_load(rio,              # Importacion y exportacion sencilla de datos
tidyverse,        # Coleccion de paquetes para datos ordenados y graficos (incluye ggplot2).
skimr,            # Resumen compacto y descriptivo de datos
visdat,           # Visualizacion de datos faltantes
corrplot,         # Graficos de matrices de correlacion
stargazer,        # Generacion de tablas en formatos de salida como LaTeX, HTML o texto
rvest,            # Herramientas para web scraping
readxl,           # Importar archivos Excel
writexl,          # Exportar archivos Excel
boot,             # Aplicacion de m?todos de remuestreo (bootstrapping)
patchwork,        # Combinacion y organizacion de graficos
gridExtra,        # Disposicion de graficos en cuadr?cula
ggplot2,          # Creacion de graficos mediante gramatica de graficos
caret,            # Evaluacion y entrenamiento de modelos predictivos
visdat,           # Visualizar missings
patchwork,        # Dise?o de graficos
data.table,       # Manipulacion eficiente de grandes conjuntos de datos
MASS,             # For post regression calculations
dplyr)            # For post regression calculations
getwd() #Mirar directorio
# Directorio general
gnl <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM"
# Directorio de datos
in_dir <- file.path(gnl, "Datos")
# Directorio para gráficos
graf <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/Graficas 04092024"
# Verificar la correcta definición de los directorios
cat("Directorio general:", gnl, "\n")
cat("Directorio de datos:", in_dir, "\n")
cat("Directorio de gráficos:", graf, "\n")
gnl <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM"
# Directorio de datos
in_dir <- file.path(gnl, "Datos")
# Directorio para gráficos
graf <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/Graficas 04092024"
# Verificar la correcta definición de los directorios
cat("Directorio general:", gnl, "\n")
cat("Directorio de datos:", in_dir, "\n")
cat("Directorio de gráficos:", graf, "\n")
#1. Homogenizar los nombres de los archivos ------------------------------------#
# Definir la carpeta base donde están los archivos
base_path <- file.path(in_dir, "Originales/EAM_2016_2022")
files <- dir_ls(path = base_path, glob = "*.dta") # Obtener todos los archivos .dta dentro de la carpeta EAM_2016_2022
# Definir directorio donde están los archivos .dta
directorio <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos"
# Obtener la lista de archivos .dta en el directorio
archivos_dta <- list.files(path = directorio, pattern = "\\.dta$", full.names = TRUE)
# Función para limpiar el nombre de los archivos
limpiar_nombre <- function(nombre) {
# Quitar caracteres especiales y espacios al inicio y al final
nombre_limpio <- str_trim(str_replace_all(nombre, "[^\\w\\s]", ""))
return(nombre_limpio)
}
# Recorrer cada archivo, limpiar el nombre y renombrarlo
for (archivo in archivos_dta) {
# Extraer el nombre del archivo sin la ruta
nombre_original <- basename(archivo)
# Limpiar el nombre
nombre_limpio <- limpiar_nombre(nombre_original)
# Crear la nueva ruta con el nombre limpio
nuevo_nombre <- file.path(directorio, nombre_limpio)
# Renombrar el archivo
file.rename(archivo, nuevo_nombre)
# Imprimir para verificar el cambio
cat("Renombrado:", nombre_original, "->", nombre_limpio, "\n")
}
# Definir directorio donde están los archivos .dta
directorio <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos"
# Obtener la lista de archivos .dta en el directorio
archivos_dta <- list.files(path = directorio, pattern = "\\.dta$", full.names = TRUE)
# Función para limpiar el nombre de los archivos
limpiar_nombre <- function(nombre) {
# Quitar caracteres especiales y espacios al inicio y al final
nombre_limpio <- str_trim(str_replace_all(nombre, "[^\\w\\s]", ""))
return(nombre_limpio)
}
# Recorrer cada archivo, limpiar el nombre y renombrarlo
for (archivo in archivos_dta) {
# Extraer el nombre del archivo sin la ruta
nombre_original <- basename(archivo)
# Limpiar el nombre
nombre_limpio <- limpiar_nombre(nombre_original)
# Crear la nueva ruta con el nombre limpio
nuevo_nombre <- file.path(directorio, nombre_limpio)
# Renombrar el archivo
file.rename(archivo, nuevo_nombre)
# Imprimir para verificar el cambio
cat("Renombrado:", nombre_original, "->", nombre_limpio, "\n")
}
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de inter?s
library(pacman)
p_load(rio,              # Importacion y exportacion sencilla de datos
tidyverse,        # Coleccion de paquetes para datos ordenados y graficos (incluye ggplot2).
skimr,            # Resumen compacto y descriptivo de datos
visdat,           # Visualizacion de datos faltantes
corrplot,         # Graficos de matrices de correlacion
stargazer,        # Generacion de tablas en formatos de salida como LaTeX, HTML o texto
rvest,            # Herramientas para web scraping
readxl,           # Importar archivos Excel
writexl,          # Exportar archivos Excel
boot,             # Aplicacion de m?todos de remuestreo (bootstrapping)
patchwork,        # Combinacion y organizacion de graficos
gridExtra,        # Disposicion de graficos en cuadr?cula
ggplot2,          # Creacion de graficos mediante gramatica de graficos
caret,            # Evaluacion y entrenamiento de modelos predictivos
visdat,           # Visualizar missings
patchwork,        # Dise?o de graficos
data.table,       # Manipulacion eficiente de grandes conjuntos de datos
MASS,             # For post regression calculations
dplyr,            # For post regression calculations
fs,
stringi)              # Para manipular archivos y carpetas
# Definir directorio donde están los archivos .dta
carpeta <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos"
# Obtener todos los archivos .csv dentro de la carpeta
archivos <- dir_ls(path = carpeta, glob = "*.csv")
# Definir directorio donde están los archivos .dta
carpeta <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos\Originales\EAM_2016_2022"
#1. Homogenizar los nombres de los archivos ------------------------------------#
# Definir directorio donde están los archivos .dta
carpeta <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos/Originales/EAM_2016_2022"
# Obtener todos los archivos .csv dentro de la carpeta
archivos <- dir_ls(path = carpeta, glob = "*.csv")
carpeta <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos/Originales/EAM_2016_2022"
archivos <- dir_ls(path = carpeta, glob = "*.csv")
# Renombrar cada archivo
for (archivo in archivos) {
# Crear el nuevo nombre
nuevo_nombre <- tolower(path_file(archivo))
nuevo_nombre <- stri_trans_general(nuevo_nombre, "Latin-ASCII")
# Verificar si el archivo nuevo ya existe
nuevo_path <- path(carpeta, nuevo_nombre)
if (file_exists(nuevo_path)) {
warning("El archivo ya existe: ", nuevo_nombre)
} else {
# Renombrar el archivo si no hay conflicto
file_move(archivo, nuevo_path)
}
}
# Definir directorio donde están los archivos .dta
carpeta <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos/Originales/EAM_2016_2022"
# Obtener todos los archivos .csv dentro de la carpeta
archivos <- dir_ls(path = carpeta, glob = "*.csv")
#------------------------------------------------------------------------------#
#------------------------------1. LIMPIEZA EAM -------------------------------#
#------------------------------------------------------------------------------#
#------------------PAQUETES DE R ---------------------------------------#
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de inter?s
library(pacman)
p_load(rio,              # Importacion y exportacion sencilla de datos
tidyverse,        # Coleccion de paquetes para datos ordenados y graficos (incluye ggplot2).
skimr,            # Resumen compacto y descriptivo de datos
visdat,           # Visualizacion de datos faltantes
corrplot,         # Graficos de matrices de correlacion
stargazer,        # Generacion de tablas en formatos de salida como LaTeX, HTML o texto
rvest,            # Herramientas para web scraping
readxl,           # Importar archivos Excel
writexl,          # Exportar archivos Excel
boot,             # Aplicacion de m?todos de remuestreo (bootstrapping)
patchwork,        # Combinacion y organizacion de graficos
gridExtra,        # Disposicion de graficos en cuadr?cula
ggplot2,          # Creacion de graficos mediante gramatica de graficos
caret,            # Evaluacion y entrenamiento de modelos predictivos
visdat,           # Visualizar missings
patchwork,        # Dise?o de graficos
data.table,       # Manipulacion eficiente de grandes conjuntos de datos
MASS,             # For post regression calculations
dplyr,            # For post regression calculations
fs,
stringi)              # Para manipular archivos y carpetas
#------------------Definir directorios-----------------------------------------#
# Directorio general
gnl <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM"
# Directorio de datos
in_dir <- file.path(gnl, "Datos")
# Directorio para gráficos
graf <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/Graficas 04092024"
# Verificar la correcta definición de los directorios
cat("Directorio general:", gnl, "\n")
cat("Directorio de datos:", in_dir, "\n")
cat("Directorio de gráficos:", graf, "\n")
ruta_carpeta <- "C:/Users/Usuario/OneDrive - Universidad de los Andes/Ley 2024 de 2020/DATOS LEY 2024/DANE/EAM/Datos/Originales/EAM_2016_2022"
archivos_csv <- list.files(path = ruta_carpeta, pattern = "\\.csv$", full.names = TRUE)
archivos_csv
limpiar_nombre_archivo <- function(nombre_archivo) {
# Obtener solo el nombre del archivo sin la ruta
nombre_limpio <- basename(nombre_archivo)
# Convertir a minúsculas
nombre_limpio <- tolower(nombre_limpio)
# Remover caracteres especiales (se reemplazan por "_")
nombre_limpio <- stri_trans_general(nombre_limpio, "Latin-ASCII")
nombre_limpio <- gsub("[^a-z0-9_\\.]", "_", nombre_limpio)
# Retornar el nuevo nombre completo (incluyendo la ruta)
file.path(dirname(nombre_archivo), nombre_limpio)
}
# Aplicar la limpieza a cada archivo y renombrarlos
for (archivo in archivos_csv) {
nuevo_nombre <- limpiar_nombre_archivo(archivo)
# Renombrar el archivo
file.rename(archivo, nuevo_nombre)
}
vis_dat(train) +
scale_fill_manual(values = c(
"character" = "#B0C4DE", # Azul claro
"integer" = "#87CEEB",  # Azul cielo
"numeric" = "#4682B4",  # Azul acero
"NA" = "#D3D3D3"       # Gris claro
))
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 3 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto 3
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de interes
library(pacman)
p_load(
# Funciones basicas para manejo y analisis de datos
arrow,         # Lectura y escritura de datos en formatos eficientes como Apache Parquet y Feather
sfheaders,     # Manipulacion eficiente de objetos espaciales 'sf' en R
VIM,           # Manejo y visualizacion de valores faltantes en datasets
tidyverse,     # Coleccion de paquetes para manipulacion de datos (dplyr, ggplot2, tidyr, etc.)
janitor,       # Limpieza y organizacion de datos (e.g., nombres de columnas, tablas cruzadas)
here,          # Gestion de rutas relativas para proyectos en R
rio,           # Importacion y exportacion sencilla de archivos (CSV, Excel, SPSS, etc.)
stringi,       # Manipulacion avanzada de cadenas de texto
readr,         # Lectura rapida de archivos de texto y CSV
skimr,         # Resumenes estadadisticos rapidos y detallados de datasets
stargazer,
# Paquetes para manejo de datos espaciales
sf,            # Manejo y analisis de datos espaciales en formato simple (e.g., shapefiles, GeoJSON)
leaflet,       # Visualizacion interactiva de mapas en R
spatialsample, # Creacion de muestras espaciales para analisis y modelado
osmdata,       # Obtencion de datos geoespaciales de OpenStreetMap (OSM)
tmaptools,     # Herramientas de apoyo para crear mapas con 'tmap'
caret,         # Conjunto de herramientas para entrenamiento y evaluacion de modelos predictivos
# Paquetes de aprendizaje automatico (Machine Learning)
tidymodels,    # Framework para construir y evaluar modelos de machine learning en un entorno 'tidy'
xgboost,       # Algoritmo de gradient boosting optimizado para tareas de clasificacion y regresion
gbm,           # Modelado de boosting basado en arboles de decision (Gradient Boosting Machines)
SuperLearner,   # Meta-modelo para combinar múltiples algoritmos de machine learning y mejorar la predicción
#Redes neuronales
nnet,   # redes neuronales de una sola capa
Brulee, # Redes neuronales mas complejas
skimr,     # datos de resumen
visdat,    # visualizacion de datos faltantes
corrplot,  # graficos de correlacion
stargazer, # tablas/salida a TEX.
modeest,   #Moda
ggplot2,    #Graficos
plotly,
rattle
)
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("Usuario", getwd()), # Julieth1
wd <- "C:\\Users\\Usuario\\OneDrive - Universidad de los andes\\Documentos\\GitHub\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("HP", getwd()), # Diego
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("hncar", getwd()),
wd <- "C:\\Users\\hncar\\Documents\\GitHub\\Problem-Set-2_Machine-Learning_2024",
ifelse(grepl("C:\\Users\\User", getwd()),  # Henry
wd <- "C:\\Users\\User\\OneDrive - Universidad de los Andes\\Big Data y Machine Learning\\Problem_set_1\\Problem_set_1",
ifelse(grepl("\\\\Users\\\\aleja\\\\", getwd()),
wd <- "Directorio",  # Jorge
ifelse(grepl("Steven Ramirez", getwd()),
wd <- "C:/Users/Steven Ramirez/Downloads/Problem-Set-2_Machine-Learning_2024/Problem-Set-2_Machine-Learning_2024",
"otro_directorio"))))))
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 3 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto 3
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de interes
library(pacman)
p_load(
# Funciones basicas para manejo y analisis de datos
arrow,         # Lectura y escritura de datos en formatos eficientes como Apache Parquet y Feather
sfheaders,     # Manipulacion eficiente de objetos espaciales 'sf' en R
VIM,           # Manejo y visualizacion de valores faltantes en datasets
tidyverse,     # Coleccion de paquetes para manipulacion de datos (dplyr, ggplot2, tidyr, etc.)
janitor,       # Limpieza y organizacion de datos (e.g., nombres de columnas, tablas cruzadas)
here,          # Gestion de rutas relativas para proyectos en R
rio,           # Importacion y exportacion sencilla de archivos (CSV, Excel, SPSS, etc.)
stringi,       # Manipulacion avanzada de cadenas de texto
readr,         # Lectura rapida de archivos de texto y CSV
skimr,         # Resumenes estadadisticos rapidos y detallados de datasets
stargazer,
# Paquetes para manejo de datos espaciales
sf,            # Manejo y analisis de datos espaciales en formato simple (e.g., shapefiles, GeoJSON)
leaflet,       # Visualizacion interactiva de mapas en R
spatialsample, # Creacion de muestras espaciales para analisis y modelado
osmdata,       # Obtencion de datos geoespaciales de OpenStreetMap (OSM)
tmaptools,     # Herramientas de apoyo para crear mapas con 'tmap'
caret,         # Conjunto de herramientas para entrenamiento y evaluacion de modelos predictivos
# Paquetes de aprendizaje automatico (Machine Learning)
tidymodels,    # Framework para construir y evaluar modelos de machine learning en un entorno 'tidy'
xgboost,       # Algoritmo de gradient boosting optimizado para tareas de clasificacion y regresion
gbm,           # Modelado de boosting basado en arboles de decision (Gradient Boosting Machines)
SuperLearner,   # Meta-modelo para combinar múltiples algoritmos de machine learning y mejorar la predicción
#Redes neuronales
nnet,   # redes neuronales de una sola capa
Brulee, # Redes neuronales mas complejas
skimr,     # datos de resumen
visdat,    # visualizacion de datos faltantes
corrplot,  # graficos de correlacion
stargazer, # tablas/salida a TEX.
modeest,   #Moda
ggplot2,    #Graficos
plotly
)
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("Usuario", getwd()), # Julieth1
wd <- "C:\\Users\\Usuario\\OneDrive - Universidad de los andes\\Documentos\\GitHub\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("HP", getwd()), # Diego
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("hncar", getwd()),
wd <- "C:\\Users\\hncar\\Documents\\GitHub\\Problem-Set-2_Machine-Learning_2024",
ifelse(grepl("C:\\Users\\User", getwd()),  # Henry
wd <- "C:\\Users\\User\\OneDrive - Universidad de los Andes\\Big Data y Machine Learning\\Problem_set_1\\Problem_set_1",
ifelse(grepl("\\\\Users\\\\aleja\\\\", getwd()),
wd <- "Directorio",  # Jorge
ifelse(grepl("Steven Ramirez", getwd()),
wd <- "C:/Users/Steven Ramirez/Downloads/Problem-Set-2_Machine-Learning_2024/Problem-Set-2_Machine-Learning_2024",
"otro_directorio"))))))
setwd(paste0(wd, "\\Datos espaciales\\Barrios")) #Directorio datos
# Leer el archivo GeoJSON con información de los barrios y cargarlo como objeto espacial
barrios <- st_read("SECTOR.geojson")
View(barrios)
setwd(paste0(wd, "\\Datos espaciales\\Barrios")) #Directorio datos
# Leer el archivo GeoJSON con información de los barrios y cargarlo como objeto espacial
barrios <- st_read("SECTOR.geojson")
View(barrios)
# Establecer el directorio de trabajo para los datos espaciales de barrios
setwd(paste0(wd, "\\Datos espaciales\\Manzanas")) #Directorio datos
# Establecer el directorio de trabajo para los datos espaciales de barrios
setwd(paste0(wd, "\\Datos espaciales\\Manzanas")) #Directorio datos
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 3 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto 3
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de interes
library(pacman)
p_load(
# Funciones basicas para manejo y analisis de datos
arrow,         # Lectura y escritura de datos en formatos eficientes como Apache Parquet y Feather
sfheaders,     # Manipulacion eficiente de objetos espaciales 'sf' en R
VIM,           # Manejo y visualizacion de valores faltantes en datasets
tidyverse,     # Coleccion de paquetes para manipulacion de datos (dplyr, ggplot2, tidyr, etc.)
janitor,       # Limpieza y organizacion de datos (e.g., nombres de columnas, tablas cruzadas)
here,          # Gestion de rutas relativas para proyectos en R
rio,           # Importacion y exportacion sencilla de archivos (CSV, Excel, SPSS, etc.)
stringi,       # Manipulacion avanzada de cadenas de texto
readr,         # Lectura rapida de archivos de texto y CSV
skimr,         # Resumenes estadadisticos rapidos y detallados de datasets
stargazer,
# Paquetes para manejo de datos espaciales
sf,            # Manejo y analisis de datos espaciales en formato simple (e.g., shapefiles, GeoJSON)
leaflet,       # Visualizacion interactiva de mapas en R
spatialsample, # Creacion de muestras espaciales para analisis y modelado
osmdata,       # Obtencion de datos geoespaciales de OpenStreetMap (OSM)
tmaptools,     # Herramientas de apoyo para crear mapas con 'tmap'
caret,         # Conjunto de herramientas para entrenamiento y evaluacion de modelos predictivos
# Paquetes de aprendizaje automatico (Machine Learning)
tidymodels,    # Framework para construir y evaluar modelos de machine learning en un entorno 'tidy'
xgboost,       # Algoritmo de gradient boosting optimizado para tareas de clasificacion y regresion
gbm,           # Modelado de boosting basado en arboles de decision (Gradient Boosting Machines)
SuperLearner,   # Meta-modelo para combinar múltiples algoritmos de machine learning y mejorar la predicción
#Redes neuronales
nnet,   # redes neuronales de una sola capa
Brulee, # Redes neuronales mas complejas
skimr,     # datos de resumen
visdat,    # visualizacion de datos faltantes
corrplot,  # graficos de correlacion
stargazer, # tablas/salida a TEX.
modeest,   #Moda
ggplot2,    #Graficos
plotly
)
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("Usuario", getwd()), # Julieth1
wd <- "C:\\Users\\Usuario\\OneDrive - Universidad de los andes\\Documentos\\GitHub\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("HP", getwd()), # Diego
wd <- "C:\\Users\\HP\\OneDrive - Universidad Nacional de Colombia\\Documentos\\Diego\\PEG\\2024-2\\Machine learning\\Repositorios\\Problem-Set-3-Machine-Learning_2024",
ifelse(grepl("hncar", getwd()),
wd <- "C:\\Users\\hncar\\Documents\\GitHub\\Problem-Set-2_Machine-Learning_2024",
ifelse(grepl("C:\\Users\\User", getwd()),  # Henry
wd <- "C:\\Users\\User\\OneDrive - Universidad de los Andes\\Big Data y Machine Learning\\Problem_set_1\\Problem_set_1",
ifelse(grepl("\\\\Users\\\\aleja\\\\", getwd()),
wd <- "Directorio",  # Jorge
ifelse(grepl("Steven Ramirez", getwd()),
wd <- "C:/Users/Steven Ramirez/Downloads/Problem-Set-2_Machine-Learning_2024/Problem-Set-2_Machine-Learning_2024",
"otro_directorio"))))))
setwd(paste0(wd, "\\Datos espaciales\\Manzanas")) #Directorio datos
setwd(paste0(wd,"/Datos")) #Directorio datos
### Base de datos de entrenamiento
train <- import("train.csv")
length(train) # 16 variables
nrow(train) #38.644 observaciones
### Base de datos de testeo
test <- import("test.csv") # Base de testeo
length(test) # 16 variables
nrow(test) #10.286 observaciones
setwd(paste0(wd, "/Datos espaciales/Manzanas")) #Directorio datos
setwd(paste0(wd, "/Datos espaciales/Manzanas")) #Directorio datos
wd
setwd(paste0(wd, "\\Datos espaciales\\Manzanas")) #Directorio datos
setwd(paste0(wd, "\\Datos espaciales\\Barrios")) #Directorio datos
# Leer el archivo GeoJSON con información de los barrios y cargarlo como objeto espacial
barrios <- st_read("SECTOR.geojson")
setwd(paste0(wd, "\\Datos espaciales\\Manzanas")) #Directorio datos
ws
wd
setwd(paste0(wd, "\\Datos espaciales\\Manzanas")) #Directorio datos
